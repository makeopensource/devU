name: devu
services:
  api:
    # Runs the API
    container_name: api
    build:
      context: .
      dockerfile: api.Dockerfile
    environment:
      TANGO_KEY: devutangokey # TODO: load in from env file. for now this is defined in tango section below
      WAIT_HOSTS: db:5432
      LEVIATHAN_URL: http://leviathan:9221
    ports:
      - '3001:3001'
    profiles:
      - '' # so it starts with normal docker compose
      - 'dev-client' # start when developing client

  client:
    # Builds the front end and exports static files to ./dist
    build:
      context: .
      dockerfile: client.Dockerfile
    volumes:
      - ./dist:/out
    profiles:
      - '' # so it starts with normal docker compose
      - 'dev-api' # start when developing api

  nginx:
    # Hosts the front end static files from ./dist/local thorough a web server
    build:
      context: .
      dockerfile: nginx.Dockerfile
    volumes:
      - ./dist/local:/usr/share/nginx/html
    command: >
      /bin/sh -c "echo 'Frontend is now accessible at http://localhost:9000' && nginx -g 'daemon off;'"
    depends_on:
      client:
        condition: service_completed_successfully
    command: >
      /bin/sh -c "echo 'Frontend is now accessible at http://localhost:9000' && nginx -g 'daemon off;'"
    ports:
      - '9000:80'
    profiles:
      - '' # so it starts with normal docker compose
      - 'dev-api' # start when developing api

  # Database stuff
  db:
    # Runs the PostgreSQL database
    image: postgres
    environment:
      POSTGRES_DB: typescript_api
      POSTGRES_USER: typescript_user
      POSTGRES_PASSWORD: password
    ports:
      - '5432:5432'
    expose:
      - '5432'
    restart: unless-stopped

  minio:
    image: minio/minio
    ports:
      - '9002:9000'
      - '9001:9001'
    expose:
      - '9000'
    #    volumes:
    #      - /tmp/data:/data
    environment:
      MINIO_ROOT_USER: typescript_user
      MINIO_ROOT_PASSWORD: changeMe
    command: server /data --console-address ":9001"

  leviathan:
    container_name: leviathan
    image: ghcr.io/makeopensource/leviathan:master
    environment:
      - LEVIATHAN_LOG_LEVEL=debug # verbose logs for dev
    ports:
      - "9221:9221"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./levi/:/app/appdata
    restart: unless-stopped
